apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${ENV}
  name: ${CUSTOM_COMPONENT_NAME}-deployment
  labels:
    app: ${CUSTOM_COMPONENT_NAME}
    env: oda
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${CUSTOM_COMPONENT_NAME}
      env: oda
  template:
    metadata:
      labels:
        app: ${CUSTOM_COMPONENT_NAME}
        env: oda
    spec:
      serviceAccountName: oci-service-account
      imagePullSecrets:
        - name: oci-secret
      containers:
        - name: ${CUSTOM_COMPONENT_NAME}
          imagePullPolicy: Always
          image: ${OCIR_REGISTRY_URL}/${OCIR_NAMESPACE}/${CUSTOM_COMPONENT_NAME}:${CUSTOM_COMPONENT_VERSION}
          ports:
            - containerPort: 3000
              name: ${CUSTOM_COMPONENT_NAME}-port
---
apiVersion: v1
kind: Service
metadata:
  name: ${CUSTOM_COMPONENT_NAME}-svc
  namespace: ${ENV}
spec:
  selector:
    app: ${CUSTOM_COMPONENT_NAME}
    env: oda
  ports:
    - name: svc-${CUSTOM_COMPONENT_NAME}-port
      protocol: TCP
      port: 80
      targetPort: ${CUSTOM_COMPONENT_NAME}-port
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${CUSTOM_COMPONENT_NAME}-ingress
  namespace: ${ENV}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: "nginx"
  rules:
    - http:
        paths:
          - path: /${OKE_PATH_ENDPOINT}/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: ${CUSTOM_COMPONENT_NAME}-svc
                port:
                  name: svc-${CUSTOM_COMPONENT_NAME}-port
